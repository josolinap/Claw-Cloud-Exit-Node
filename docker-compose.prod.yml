version: '3.8'

services:
  tailscale-exit-node:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VCS_REF=${VCS_REF:-$(git rev-parse --short HEAD)}
    
    container_name: tailscale-exit-node-prod
    hostname: ${HOSTNAME:-tailscale-exit-node}
    
    # Environment variables
    environment:
      - TAILSCALE_AUTHKEY=${TAILSCALE_AUTHKEY}
      - HOSTNAME=${HOSTNAME:-tailscale-exit-node}
      - DISABLE_IPV6=${DISABLE_IPV6:-true}
      - TZ=${TZ:-UTC}
    
    # Network configuration
    network_mode: host
    
    # Capabilities required for networking
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 128M
          cpus: '0.25'
    
    # Volumes for persistence and logs
    volumes:
      # Persistent Tailscale state
      - tailscale-data:/var/lib/tailscale:rw
      # Log volumes for monitoring
      - ./logs/nginx:/var/log/nginx:rw
      - ./logs/tailscale:/var/log/tailscale:rw
      - ./logs/supervisor:/var/log/supervisor:rw
      # SSL certificates (mount your real certificates here)
      # - ./ssl/cert.pem:/etc/ssl/certs/nginx-cert.pem:ro
      # - ./ssl/key.pem:/etc/ssl/private/nginx-key.pem:ro
    
    # Port mapping (only if not using host network)
    ports:
      - "80:80"
      - "443:443"
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Restart policy
    restart: unless-stopped
    
    # Logging configuration
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
    
    # Labels for identification and management
    labels:
      - "com.claw.cloud.service=tailscale-exit-node"
      - "com.claw.cloud.version=1.0.0"
      - "com.claw.cloud.environment=production"
      - "traefik.enable=false"  # Disable if using Traefik
    
    # Process limits
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535

volumes:
  tailscale-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/tailscale

# Optional: monitoring stack
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus-data:/prometheus
  #   restart: unless-stopped

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   restart: unless-stopped

# volumes:
#   prometheus-data:
#   grafana-data:
